<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.common.mapper.TrainMapper" >
  <resultMap id="BaseResultMap" type="com.example.common.entity.Train" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="come" property="come" jdbcType="VARCHAR" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="data" property="data" jdbcType="DATE" />
    <result column="start" property="start" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="counts" property="counts" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, come, destination, data, start, time, counts
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.common.entity.TrainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.common.entity.TrainExample" >
    delete from train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.example.common.entity.Train" >
    insert into train (id, come, destination, 
      data, start, time, counts
      )
    values (#{id,jdbcType=INTEGER}, #{come,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR}, 
      #{data,jdbcType=DATE}, #{start,jdbcType=TIMESTAMP}, #{time,jdbcType=VARCHAR}, #{counts,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.common.entity.Train" >
    insert into train
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="come != null" >
        come,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="data != null" >
        data,
      </if>
      <if test="start != null" >
        start,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="counts != null" >
        counts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="come != null" >
        #{come,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=DATE},
      </if>
      <if test="start != null" >
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="counts != null" >
        #{counts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.common.entity.TrainExample" resultType="java.lang.Integer" >
    select count(*) from train
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update train
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.come != null" >
        come = #{record.come,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=DATE},
      </if>
      <if test="record.start != null" >
        start = #{record.start,jdbcType=TIMESTAMP},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.counts != null" >
        counts = #{record.counts,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update train
    set id = #{record.id,jdbcType=INTEGER},
      come = #{record.come,jdbcType=VARCHAR},
      destination = #{record.destination,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=DATE},
      start = #{record.start,jdbcType=TIMESTAMP},
      time = #{record.time,jdbcType=VARCHAR},
      counts = #{record.counts,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.common.entity.Train" >
    update train
    <set >
      <if test="come != null" >
        come = #{come,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="data != null" >
        data = #{data,jdbcType=DATE},
      </if>
      <if test="start != null" >
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="counts != null" >
        counts = #{counts,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.common.entity.Train" >
    update train
    set come = #{come,jdbcType=VARCHAR},
      destination = #{destination,jdbcType=VARCHAR},
      data = #{data,jdbcType=DATE},
      start = #{start,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=VARCHAR},
      counts = #{counts,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>